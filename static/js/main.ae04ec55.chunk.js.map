{"version":3,"sources":["components/ResultItem.js","components/ResultsCard.js","config/google.js","components/DeleteSearchConfirmation.js","components/OpenSearchModal.js","components/SaveSearchConfirmation.js","components/OverwriteSearchConfirmation.js","components/SaveSearchModal.js","components/EditURLModal.js","components/URLsManagerModal.js","components/SearchCard.js","services/search-engine.js","config/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["ResultItem","result","link","href","rel","target","title","snippet","ResultsCard","results","Card","fluid","Content","Header","map","GoogleAPI","key","cx","DeleteSearchConfirmation","onDeleteSeach","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","disabled","image","Description","Actions","onClick","content","labelPosition","icon","firebase","firestore","collection","doc","delete","negative","OpenSearchModal","onOpenSearch","Segment","Dimmer","active","Loader","size","Table","celled","selectable","Row","HeaderCell","Body","path","d","value","item","index","name","ids","Cell","q","statesSearchArray","join","includeWord","excludeWord","SaveSearchConfirmation","props","onSaveSearch","primary","OverwriteSearchConfirmation","onOverwriteSearch","onCancel","SaveSearchModal","showConfirmation","setShowConfirmation","setName","db","save","set","query","selectedURLs","includedTerms","term","excludedTerms","then","search","get","data","className","Grid","Column","width","Input","placeholder","onChange","e","EditURLModal","onUpdate","url","setURL","Form","label","id","URLsManagerModal","update","console","log","onSave","color","remove","SearchCard","onSearch","setTitle","setQuery","setExcludedTerms","setIncludedTerms","setSelectedURLs","availableURLs","setAvailableURLs","docs","text","onResetHanlder","onOpenSearchHandler","split","onSaveSearchHandler","window","Icon","columns","type","event","Dropdown","multiple","selection","options","allowAdditions","onAddItem","orTerms","excludeTerms","exactTerms","axios","find","response","items","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setResults","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae04ec55.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ResultItem = ({ result = {} }) => (\n  <div>\n    <p>{result.link}</p>\n    <a href={result.link} rel=\"noreferrer\" target=\"_blank\">\n      <h3>{result.title}</h3>\n    </a>\n    <p>{result.snippet}</p>\n    <br></br>\n  </div>\n);\n\nexport default ResultItem;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport ResultItem from \"./ResultItem\";\n\nconst ResultsCard = ({ results = [] }) => {\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header>Results</Card.Header>\n      </Card.Content>\n      <Card.Content>\n        {results.map((result) => (\n          <ResultItem key={result.link} result={result}></ResultItem>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ResultsCard;\n","const GoogleAPI = {\n  key: \"AIzaSyADVfee-NgDz8_ePI6dOTzySBhvQtrpVY0\",\n  cx: \"9a352a89890a7adf4\",\n};\n\nexport default GoogleAPI;\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { Button, Header, Modal } from \"semantic-ui-react\";\n\nconst DeleteSearchConfirmation = ({ title, onDeleteSeach }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const onDeleteHandler = () => {\n    const db = firebase.firestore();\n    db.collection(\"searches\").doc(title).delete();\n    setOpen(false);\n    if (onDeleteSeach) {\n      onDeleteSeach();\n    }\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button disabled={title === \"Unnamed\"}>Delete</Button>}\n    >\n      <Modal.Header>Delete search \"{title}\"</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <Header>Do you want to delete search \"{title}\"?</Header>\n          <p>This action is not reversible.</p>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n        <Button\n          content=\"Yes, delete it\"\n          labelPosition=\"right\"\n          icon=\"trash\"\n          onClick={() => onDeleteHandler()}\n          negative\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default DeleteSearchConfirmation;\n","import { FirestoreCollection } from \"@react-firebase/firestore\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Dimmer,\n  Loader,\n  Modal,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\n\nconst OpenSearchModal = ({ onOpenSearch }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Open</Button>}\n    >\n      <Modal.Header>Select a Search</Modal.Header>\n      <Modal.Content>\n        <Segment>\n          <Dimmer active={false}>\n            <Loader size=\"medium\">Loading</Loader>\n          </Dimmer>\n          <Table celled selectable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Query</Table.HeaderCell>\n                <Table.HeaderCell>Limited to URLs</Table.HeaderCell>\n                <Table.HeaderCell>Included terms</Table.HeaderCell>\n                <Table.HeaderCell>Excluded terms</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <FirestoreCollection path=\"/searches/\">\n                {(d) =>\n                  d.value\n                    ? d.value.map((item, index) => (\n                        <Table.Row\n                          key={d.ids[index]}\n                          onClick={() => {\n                            onOpenSearch({\n                              name: d.ids[index],\n                              ...d.value[index],\n                            });\n                            setOpen(false);\n                          }}\n                        >\n                          <Table.Cell>{d.ids[index]}</Table.Cell>\n                          <Table.Cell>{item.q}</Table.Cell>\n                          <Table.Cell>\n                            {item.statesSearchArray.join(\", \")}\n                          </Table.Cell>\n                          <Table.Cell>{item.includeWord}</Table.Cell>\n                          <Table.Cell>{item.excludeWord}</Table.Cell>\n                        </Table.Row>\n                      ))\n                    : null\n                }\n              </FirestoreCollection>\n            </Table.Body>\n          </Table>\n        </Segment>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default OpenSearchModal;\n","import React from \"react\";\nimport { Button, Header, Modal } from \"semantic-ui-react\";\n\nconst SaveSearchConfirmation = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const onSaveHandler = () => {\n    setOpen(false);\n    if (props.onSaveSearch) {\n      props.onSaveSearch();\n    }\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button disabled={props.name === \"Unnamed\"}>Save</Button>}\n    >\n      <Modal.Header>Save search \"{props.name}\"</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <Header>\n            Do you want to save the changes made to this search \"{props.name}\"?\n          </Header>\n          <p>This action is not reversible.</p>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n        <Button onClick={() => onSaveHandler()} primary>\n          Yes, save it\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default SaveSearchConfirmation;\n","import React from \"react\";\nimport { Button, Header, Modal } from \"semantic-ui-react\";\n\nconst OverwriteSearchConfirmation = ({\n  title,\n  onOverwriteSearch,\n  onCancel,\n  open,\n}) => {\n  return (\n    <Modal onClose={() => onCancel()} open={open}>\n      <Modal.Header>Overwirte search \"{title}\"</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <Header>Do you want to overwrite the search {title}?</Header>\n          <p>This action is not reversible.</p>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => onCancel()}>Cancel</Button>\n        <Button onClick={() => onOverwriteSearch()} primary>\n          Yes, overwrite it\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default OverwriteSearchConfirmation;\n","import { FirestoreCollection } from \"@react-firebase/firestore\";\nimport firebase from \"firebase\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Dimmer,\n  Grid,\n  Input,\n  Loader,\n  Modal,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\nimport OverwriteSearchConfirmation from \"./OverwriteSearchConfirmation\";\n\nconst SaveSearchModal = (props) => {\n  const [open, setOpen] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const db = firebase.firestore();\n\n  const save = () => {\n    db.collection(\"searches\")\n      .doc(name)\n      .set({\n        q: props.query,\n        statesSearchArray: props.selectedURLs,\n        includeWord: props.includedTerms.map((term) => term.value).join(\" \"),\n        excludeWord: props.excludedTerms.map((term) => term.value).join(\" \"),\n      })\n      .then((search) => {\n        setOpen(false);\n        if (props.onSaveSearch) {\n          db.collection(\"searches\")\n            .doc(name)\n            .get()\n            .then((doc) => props.onSaveSearch({ name, ...doc.data() }));\n        }\n        setName(\"\");\n        setShowConfirmation(false);\n      });\n  };\n\n  const saveSearch = () => {\n    if (name !== \"\" && name !== \"Unnamed\") {\n      db.collection(\"searches\")\n        .doc(name)\n        .get()\n        .then((doc) => {\n          if (doc.data()) {\n            setShowConfirmation(true);\n          } else {\n            save();\n          }\n        });\n    }\n  };\n\n  return (\n    <div className=\"d-inline\">\n      <OverwriteSearchConfirmation\n        title={name}\n        open={showConfirmation}\n        onCancel={() => setShowConfirmation(false)}\n        onOverwriteSearch={() => save()}\n      ></OverwriteSearchConfirmation>\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={<Button>Save As</Button>}\n      >\n        <Modal.Header>Save a Search</Modal.Header>\n        <Modal.Content>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={13}>\n                <Input\n                  fluid\n                  placeholder=\"Search name\"\n                  value={name}\n                  onChange={(e, { value }) => setName(value)}\n                ></Input>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Button fluid primary onClick={() => saveSearch()}>\n                  Save\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Segment>\n            <Dimmer active={false}>\n              <Loader size=\"medium\">Loading</Loader>\n            </Dimmer>\n            <Table celled selectable>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Name</Table.HeaderCell>\n                  <Table.HeaderCell>Query</Table.HeaderCell>\n                  <Table.HeaderCell>Limited to URLs</Table.HeaderCell>\n                  <Table.HeaderCell>Included terms</Table.HeaderCell>\n                  <Table.HeaderCell>Excluded terms</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <FirestoreCollection path=\"/searches/\">\n                  {(d) =>\n                    d.value\n                      ? d.value.map((item, index) => (\n                          <Table.Row>\n                            <Table.Cell>{d.ids[index]}</Table.Cell>\n                            <Table.Cell>{item.q}</Table.Cell>\n                            <Table.Cell>\n                              {item.statesSearchArray.join(\", \")}\n                            </Table.Cell>\n                            <Table.Cell>{item.includeWord}</Table.Cell>\n                            <Table.Cell>{item.excludeWord}</Table.Cell>\n                          </Table.Row>\n                        ))\n                      : null\n                  }\n                </FirestoreCollection>\n              </Table.Body>\n            </Table>\n          </Segment>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => setOpen(false)}>Close</Button>\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SaveSearchModal;\n","import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"semantic-ui-react\";\n\nconst EditURLModal = ({ item, onUpdate = () => {} }) => {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(item.name);\n  const [url, setURL] = useState(item.url);\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button icon=\"pencil\"></Button>}\n    >\n      <Modal.Header>\n        Edit URL <i>{item.url}</i>\n      </Modal.Header>\n      <Modal.Content>\n        <Form.Input\n          fluid\n          label=\"Name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e, { value }) => setName(value)}\n        />\n        <br />\n        <Form.Input\n          fluid\n          label=\"URL\"\n          placeholder=\"URL\"\n          value={url}\n          onChange={(e, { value }) => setURL(value)}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Cancel</Button>\n        <Button\n          primary\n          onClick={() => {\n            setOpen(false);\n            onUpdate({ id: item.id, name, url });\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default EditURLModal;\n","import { FirestoreCollection } from \"@react-firebase/firestore\";\nimport firebase from \"firebase\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Input, Modal, Table } from \"semantic-ui-react\";\nimport EditURLModal from \"./EditURLModal\";\n\nconst URLsManagerModal = () => {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n\n  const db = firebase.firestore();\n  const collection = db.collection(\"urls\");\n\n  const save = ({ onSave = () => {} }) => {\n    collection\n      .doc()\n      .set({\n        name: name,\n        url: url,\n      })\n      .then((search) => {\n        if (onSave) {\n          collection\n            .doc(name)\n            .get()\n            .then((doc) => onSave({ name, ...doc.data() }));\n        }\n        setName(\"\");\n        setURL(\"\");\n      });\n  };\n\n  const remove = ({ id, name, url }) => {\n    collection\n      .doc(id)\n      .delete()\n      .then(() => {});\n  };\n\n  const update = ({ id, name, url }) => {\n    console.log(name);\n    collection.doc(id).set({\n      name,\n      url,\n    });\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Manage</Button>}\n    >\n      <Modal.Header>Manage URLs</Modal.Header>\n      <Modal.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <Input\n                fluid\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e, { value }) => setName(value)}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Input\n                fluid\n                placeholder=\"URL\"\n                value={url}\n                onChange={(e, { value }) => setURL(value)}\n              />\n            </Grid.Column>\n            <Grid.Column width={2}>\n              <Button fluid primary onClick={save}>\n                Save\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Modal.Content>\n      <Modal.Content>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>URL</Table.HeaderCell>\n              <Table.HeaderCell>Actions</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <FirestoreCollection path=\"/urls/\">\n              {(d) =>\n                d.value\n                  ? d.value.map((item, index) => (\n                      <Table.Row key={d.ids[index]}>\n                        <Table.Cell>{item.name}</Table.Cell>\n                        <Table.Cell>\n                          <a href={item.url}>{item.url}</a>\n                        </Table.Cell>\n                        <Table.Cell>\n                          <EditURLModal\n                            item={{ id: d.ids[index], ...item }}\n                            onUpdate={update}\n                          ></EditURLModal>\n                          <Button\n                            icon=\"trash\"\n                            color=\"red\"\n                            onClick={() =>\n                              remove({ ...item, id: d.ids[index] })\n                            }\n                          ></Button>\n                        </Table.Cell>\n                      </Table.Row>\n                    ))\n                  : null\n              }\n            </FirestoreCollection>\n          </Table.Body>\n        </Table>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default URLsManagerModal;\n","import firebase from \"firebase\";\nimport React, { useState } from \"react\";\nimport { Button, Card, Dropdown, Grid, Icon, Input } from \"semantic-ui-react\";\nimport { search } from \"./../services/search-engine\";\nimport DeleteSearchConfirmation from \"./DeleteSearchConfirmation\";\nimport OpenSearchModal from \"./OpenSearchModal\";\nimport SaveSearchConfirmation from \"./SaveSearchConfirmation\";\nimport SaveSearchModal from \"./SaveSearchModal\";\nimport URLsManagerModal from \"./URLsManagerModal\";\n\nconst SearchCard = ({ onSearch = (results) => {} }) => {\n  const [title, setTitle] = useState(\"Unnamed\");\n  const [query, setQuery] = useState(\"\");\n  const [excludedTerms, setExcludedTerms] = useState([]);\n  const [includedTerms, setIncludedTerms] = useState([]);\n  const [selectedURLs, setSelectedURLs] = useState([]);\n  const [availableURLs, setAvailableURLs] = useState([]);\n\n  const db = firebase.firestore();\n\n  db.collection(\"urls\")\n    .get()\n    .then((result) => {\n      setAvailableURLs(\n        result.docs.map((item) => {\n          return {\n            key: item.id,\n            text: item.data().name,\n            value: item.id,\n          };\n        })\n      );\n    });\n\n  const onSearchHandler = () => {\n    db.collection(\"urls\")\n      .get()\n      .then((result) => {\n        search({\n          query,\n          orTerms: selectedURLs.map((key) => {\n            const url = result.docs.find(({ id }) => id === key)?.data()?.url;\n            return url ? \"site%3A\" + url : \"\";\n          }),\n          excludeTerms: excludedTerms.map((term) => term.value),\n          exactTerms: includedTerms.map((term) => term.value),\n        }).then((response) => onSearch(response.data.items));\n      });\n  };\n\n  const onResetHanlder = () => {\n    setTitle(\"Unnamed\");\n    setQuery(\"\");\n    setIncludedTerms([]);\n    setExcludedTerms([]);\n    setSelectedURLs([]);\n    onSearch([]);\n  };\n\n  const onOpenSearchHandler = (search) => {\n    onSearch([]);\n    setTitle(search.name);\n    setQuery(search.q || \"\");\n    setIncludedTerms(\n      (search.includeWord || \"\").split(\" \").map((term) => {\n        return { key: term, text: term, value: term };\n      })\n    );\n    setExcludedTerms(\n      (search.excludeWord || \"\").split(\" \").map((term) => {\n        return { key: term, text: term, value: term };\n      })\n    );\n    setSelectedURLs(search.statesSearchArray);\n  };\n\n  const onSaveSearchHandler = onOpenSearchHandler;\n\n  const onDeleteHandler = () => {\n    onResetHanlder();\n  };\n\n  const onSelectURLs = (event, { value }) => {\n    setSelectedURLs(value);\n  };\n\n  const onSaveHandler = () => {\n    if (title !== \"Unnamed\") {\n      db.collection(\"searches\")\n        .doc(title)\n        .set({\n          q: query,\n          statesSearchArray: selectedURLs,\n          includeWord: includedTerms.map((term) => term.value).join(\" \"),\n          excludeWord: excludedTerms.map((term) => term.value).join(\" \"),\n        })\n        .then(() => {});\n    } else {\n    }\n  };\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header className=\"d-inline\">{title}</Card.Header>\n        <div className=\"d-inline float-right\">\n          <Button\n            onClick={() =>\n              window.open(\"https://moz.com/learn/seo/search-operators\")\n            }\n          >\n            <Icon name=\"help circle\"></Icon>\n            Avanced Syntax\n          </Button>\n          <OpenSearchModal onOpenSearch={onOpenSearchHandler}></OpenSearchModal>\n        </div>\n      </Card.Content>\n      <Card.Content>\n        <Grid columns={1}>\n          <Grid.Column>\n            <Input\n              type=\"text\"\n              placeholder=\"Type the desired query...\"\n              fluid\n              icon=\"search\"\n              value={query}\n              onChange={(event, { value }) => setQuery(value)}\n            />\n          </Grid.Column>\n        </Grid>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column>\n              <h4>Limit to URLs</h4>\n              <Dropdown\n                placeholder=\"Limit to URLs\"\n                multiple\n                selection\n                options={availableURLs}\n                value={selectedURLs}\n                onChange={onSelectURLs}\n              ></Dropdown>\n              <URLsManagerModal></URLsManagerModal>\n            </Grid.Column>\n            <Grid.Column>\n              <h4>Must include</h4>\n              <Dropdown\n                icon={\"\"}\n                fluid\n                search\n                selection\n                multiple\n                allowAdditions\n                options={includedTerms}\n                value={includedTerms.map((term) => term.value)}\n                onAddItem={(event, data) => {\n                  setIncludedTerms([\n                    ...includedTerms,\n                    { key: data.value, text: data.value, value: data.value },\n                  ]);\n                }}\n                onChange={(event, { value }) => {\n                  setIncludedTerms(\n                    value.map((term) => {\n                      return {\n                        key: term,\n                        text: term,\n                        value: term,\n                      };\n                    })\n                  );\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <h4>\n                Must <b>NOT</b> include\n              </h4>\n              <Dropdown\n                icon={\"\"}\n                fluid\n                search\n                selection\n                multiple\n                allowAdditions\n                options={excludedTerms}\n                value={excludedTerms.map((term) => term.value)}\n                onAddItem={(event, data) => {\n                  setExcludedTerms([\n                    ...excludedTerms,\n                    { key: data.value, text: data.value, value: data.value },\n                  ]);\n                }}\n                onChange={(event, { value }) => {\n                  setExcludedTerms(\n                    value.map((term) => {\n                      return {\n                        key: term,\n                        text: term,\n                        value: term,\n                      };\n                    })\n                  );\n                }}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Card.Content>\n      <Card.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <DeleteSearchConfirmation\n                title={title}\n                onDeleteSeach={onDeleteHandler}\n              ></DeleteSearchConfirmation>\n              <div className=\"d-inline float-right\">\n                <Button onClick={onResetHanlder}>Reset</Button>\n                <SaveSearchConfirmation\n                  name={title}\n                  onSaveSearch={onSaveHandler}\n                ></SaveSearchConfirmation>\n                <SaveSearchModal\n                  {...{ query, selectedURLs, includedTerms, excludedTerms }}\n                  onSaveSearch={onSaveSearchHandler}\n                ></SaveSearchModal>\n                <Button primary onClick={onSearchHandler}>\n                  Search\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Card.Content>\n    </Card>\n  );\n};\nexport default SearchCard;\n","import axios from \"axios\";\nimport GoogleAPI from \"../config/google\";\n\nexport const search = ({\n  query,\n  orTerms = [],\n  excludeTerms = [],\n  exactTerms = [],\n}) => {\n  return axios.get(\n    `https://www.googleapis.com/customsearch/v1?key=${GoogleAPI.key}&cx=${\n      GoogleAPI.cx\n    }&q=${query + ' \"' + exactTerms.join('\" ')}&orTerms=${orTerms.join(\n      \" \"\n    )}&excludeTerms=${excludeTerms.join(\" \")}&exactTerms=${\"\"}`\n  );\n};\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBjE_o5Yn2kFS1pznRhMTsiKgJ8dSkG5Qg\",\n  authDomain: \"customsearch-8c1e9.firebaseapp.com\",\n  projectId: \"customsearch-8c1e9\",\n  storageBucket: \"customsearch-8c1e9.appspot.com\",\n  messagingSenderId: \"928794993271\",\n  appId: \"1:928794993271:web:4ffafbfb933e3add84dc72\",\n  measurementId: \"G-SC4PNYP74M\",\n};\n","import { FirestoreProvider } from \"@react-firebase/firestore\";\nimport firebase from \"firebase\";\nimport { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport ResultsCard from \"./components/ResultsCard\";\nimport SearchCard from \"./components/SearchCard\";\nimport { firebaseConfig } from \"./config/firebase\";\n\nfunction App() {\n  const [results, setResults] = useState([]);\n\n  const onSearchHandler = (results) => {\n    setResults(results);\n  };\n  return (\n    <FirestoreProvider {...firebaseConfig} firebase={firebase}>\n      <div className=\"App\">\n        <Container>\n          <SearchCard onSearch={onSearchHandler}></SearchCard>\n          <ResultsCard results={results}></ResultsCard>\n        </Container>\n      </div>\n    </FirestoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}