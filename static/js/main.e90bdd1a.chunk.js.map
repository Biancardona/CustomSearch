{"version":3,"sources":["components/ResultItem.js","components/ResultsCard.js","config/google.js","components/SaveSearchModal.js","components/SearchCard.js","services/search-engine.js","config/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["ResultItem","result","link","href","rel","target","title","snippet","ResultsCard","results","Card","fluid","Content","Header","map","SaveSearchModal","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","Grid","Row","Column","width","Input","placeholder","primary","onClick","Segment","Dimmer","active","Loader","size","Table","celled","selectable","HeaderCell","Body","path","d","value","item","index","Cell","ids","q","statesSearchArray","join","includeWord","excludeWord","Actions","SearchCard","onSearch","query","setQuery","excludedTerms","setExcludedTerms","includedTerms","setIncludedTerms","selectedURLs","setSelectedURLs","className","columns","type","icon","onChange","event","Dropdown","multiple","selection","options","key","text","search","allowAdditions","onAddItem","data","Message","floating","content","color","firebase","firestore","collection","doc","Date","toTimeString","set","term","then","console","log","orTerms","excludeTerms","exactTerms","axios","get","GoogleAPI","response","items","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setResults","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e90bdd1a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ResultItem = ({ result = {} }) => (\n  <div>\n    <p>{result.link}</p>\n    <a href={result.link} rel=\"noreferrer\" target=\"_blank\">\n      <h3>{result.title}</h3>\n    </a>\n    <p>{result.snippet}</p>\n    <br></br>\n  </div>\n);\n\nexport default ResultItem;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport ResultItem from \"./ResultItem\";\n\nconst ResultsCard = ({ results = [] }) => {\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header>Results</Card.Header>\n      </Card.Content>\n      <Card.Content>\n        {results.map((result) => (\n          <ResultItem key={result.link} result={result}></ResultItem>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ResultsCard;\n","export default {\n  key: \"AIzaSyA5gbq4gQ83AEP633ET52IbloKJiKlOAks\",\n  cx: \"9a352a89890a7adf4\",\n};\n","import { FirestoreCollection } from \"@react-firebase/firestore\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Dimmer,\n  Grid,\n  Input,\n  Loader,\n  Modal,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\n\nconst SaveSearchModal = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Save</Button>}\n    >\n      <Modal.Header>Save a Search</Modal.Header>\n      <Modal.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={13}>\n              <Input fluid placeholder=\"Search name\"></Input>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Button fluid primary onClick={() => setOpen(false)}>\n                Save\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Segment>\n          <Dimmer active={false}>\n            <Loader size=\"medium\">Loading</Loader>\n          </Dimmer>\n          <Table celled selectable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Query</Table.HeaderCell>\n                <Table.HeaderCell>Limited to URLs</Table.HeaderCell>\n                <Table.HeaderCell>Included terms</Table.HeaderCell>\n                <Table.HeaderCell>Excluded terms</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <FirestoreCollection path=\"/searches/\">\n                {(d) =>\n                  d.value\n                    ? d.value.map((item, index) => (\n                      <Table.Row>\n                        <Table.Cell>{d.ids[index]}</Table.Cell>\n                        <Table.Cell>{item.q}</Table.Cell>\n                        <Table.Cell>\n                          {item.statesSearchArray.join(\", \")}\n                        </Table.Cell>\n                        <Table.Cell>{item.includeWord}</Table.Cell>\n                        <Table.Cell>{item.excludeWord}</Table.Cell>\n                      </Table.Row>\n                    ))\n                    : null\n                }\n              </FirestoreCollection>\n            </Table.Body>\n          </Table>\n        </Segment>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default SaveSearchModal;\n","import { FirestoreCollection } from \"@react-firebase/firestore\";\nimport firebase from \"firebase\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Dropdown,\n  Grid,\n  Input,\n  Loader,\n  Modal,\n  Segment,\n  Message,\n  Table,\n} from \"semantic-ui-react\";\nimport { search } from \"../services/search-engine\";\nimport SaveSearchModal from \"./SaveSearchModal\";\n\nconst SearchCard = ({ onSearch = (results) => { } }) => {\n  const [query, setQuery] = useState(\"\");\n  const [excludedTerms, setExcludedTerms] = useState([]);\n  const [includedTerms, setIncludedTerms] = useState([]);\n  const [selectedURLs, setSelectedURLs] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const limitToURLs = [\n    {\n      key: \"site%3Awww.pharmacy.ca.gov\",\n      text: \"California\",\n      value: \"site%3Awww.pharmacy.ca.gov\",\n    },\n    {\n      key: \"site%3Afloridaspharmacy.gov\",\n      text: \"Florida\",\n      value: \"site%3Afloridaspharmacy.gov\",\n    },\n    {\n      key: \"site%3Apharmacy.ky.gov\",\n      text: \"Kentucky\",\n      value: \"site%3Apharmacy.ky.gov\",\n    },\n    {\n      key: \"site%3Awww.dos.pa.gov/ProfessionalLicensing/BoardsCommissions/Pharmacy\",\n      text: \"Pennsylvania\",\n      value:\n        \"site%3Awww.dos.pa.gov/ProfessionalLicensing/BoardsCommissions/Pharmacy\",\n    },\n    {\n      key: \"site%3Adoh.sd.gov/boards/pharmacy\",\n      text: \"SD\",\n      value: \"site%3Adoh.sd.gov/boards/pharmacy\",\n    },\n    {\n      key: \"site%3Awww.pharmacy.texas.gov\",\n      text: \"Texas\",\n      value: \"site%3Awww.pharmacy.texas.gov\",\n    },\n  ];\n\n  const onSearchHandler = () => {\n    console.log(selectedURLs, excludedTerms, includedTerms);\n    search({\n      query,\n      orTerms: selectedURLs,\n      excludeTerms: excludedTerms.map((term) => term.value),\n      exactTerms: includedTerms.map((term) => term.value),\n    }).then((response) => onSearch(response.data.items));\n  };\n\n  const onSelectURLs = (event, { value }) => {\n    setSelectedURLs(value);\n  };\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header className=\"d-inline\">Unnamed</Card.Header>\n        <div className=\"d-inline float-right\">\n          <Modal\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Button>Open</Button>}\n          >\n            <Modal.Header>Select a Search</Modal.Header>\n            <Modal.Content>\n              <Segment>\n                <Dimmer active={false}>\n                  <Loader size=\"medium\">Loading</Loader>\n                </Dimmer>\n                <Table celled selectable>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Name</Table.HeaderCell>\n                      <Table.HeaderCell>Query</Table.HeaderCell>\n                      <Table.HeaderCell>Limited to URLs</Table.HeaderCell>\n                      <Table.HeaderCell>Included terms</Table.HeaderCell>\n                      <Table.HeaderCell>Excluded terms</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    <FirestoreCollection path=\"/searches/\">\n                      {(d) =>\n                        d.value\n                          ? d.value.map((item, index) => (\n                            <Table.Row>\n                              <Table.Cell>{d.ids[index]}</Table.Cell>\n                              <Table.Cell>{item.q}</Table.Cell>\n                              <Table.Cell>\n                                {item.statesSearchArray.join(\", \")}\n                              </Table.Cell>\n                              <Table.Cell>{item.includeWord}</Table.Cell>\n                              <Table.Cell>{item.excludeWord}</Table.Cell>\n                            </Table.Row>\n                          ))\n                          : null\n                      }\n                    </FirestoreCollection>\n                  </Table.Body>\n                </Table>\n              </Segment>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Modal.Actions>\n          </Modal>\n        </div>\n      </Card.Content>\n      <Card.Content>\n        <Grid columns={1}>\n          <Grid.Column>\n            <Input\n              type=\"text\"\n              placeholder=\"Type the desired query...\"\n              fluid\n              icon=\"search\"\n              value={query}\n              onChange={(event, { value }) => setQuery(value)}\n            />\n          </Grid.Column>\n        </Grid>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column>\n              <h4>Limit to URLs</h4>\n              <Dropdown\n                placeholder=\"Limit to URLs\"\n                fluid\n                multiple\n                selection\n                options={limitToURLs}\n                onChange={onSelectURLs}\n              ></Dropdown>\n            </Grid.Column>\n            <Grid.Column>\n              <h4>Must include</h4>\n              <Dropdown\n                icon={\"\"}\n                fluid\n                search\n                selection\n                multiple\n                allowAdditions\n                options={includedTerms}\n                onAddItem={(event, data) => {\n                  setIncludedTerms([\n                    ...includedTerms,\n                    { key: data.value, text: data.value, value: data.value },\n                  ]);\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <h4>\n                Must <b>NOT</b> include\n              </h4>\n              <Dropdown\n                icon={\"\"}\n                fluid\n                search\n                selection\n                multiple\n                allowAdditions\n                options={excludedTerms}\n                onAddItem={(event, data) => {\n                  setExcludedTerms([\n                    ...excludedTerms,\n                    { key: data.value, text: data.value, value: data.value },\n                  ]);\n                }}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Column>\n\n            <Message floating content='Avanced Syntax ' />\n\n          </Grid.Column>\n        </Grid>\n      </Card.Content>\n      <Card.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Button color=\"red\">Delete</Button>\n              <div className=\"d-inline float-right\">\n                <Button>Reset</Button>\n                <Button\n                  onClick={() => {\n                    const db = firebase.firestore();\n                    db.collection(\"searches\")\n                      .doc(new Date().toTimeString())\n                      .set({\n                        q: query,\n                        statesSearchArray: selectedURLs,\n                        includeWord: includedTerms\n                          .map((term) => term.value)\n                          .join(\" \"),\n                        excludeWord: excludedTerms\n                          .map((term) => term.value)\n                          .join(\" \"),\n                      })\n                      .then(console.log);\n                  }}\n                >\n                  Save\n                </Button>\n                <SaveSearchModal></SaveSearchModal>\n                <Button primary onClick={onSearchHandler}>\n                  Search\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Card.Content>\n    </Card >\n  );\n};\nexport default SearchCard;\n","import axios from \"axios\";\nimport GoogleAPI from \"../config/google\";\n\nexport const search = ({\n  query,\n  orTerms = [],\n  excludeTerms = [],\n  exactTerms = [],\n}) => {\n  return axios.get(\n    `https://www.googleapis.com/customsearch/v1?key=${GoogleAPI.key}&cx=${\n      GoogleAPI.cx\n    }&q=${query}&orTerms=${orTerms.join()}&excludeTerms=${excludeTerms.join(\n      \" \"\n    )}&exactTerms=${exactTerms.join(\" \")}`\n  );\n};\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBjE_o5Yn2kFS1pznRhMTsiKgJ8dSkG5Qg\",\n  authDomain: \"customsearch-8c1e9.firebaseapp.com\",\n  projectId: \"customsearch-8c1e9\",\n  storageBucket: \"customsearch-8c1e9.appspot.com\",\n  messagingSenderId: \"928794993271\",\n  appId: \"1:928794993271:web:4ffafbfb933e3add84dc72\",\n  measurementId: \"G-SC4PNYP74M\",\n};\n","import { FirestoreProvider } from \"@react-firebase/firestore\";\nimport firebase from \"firebase\";\nimport { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport ResultsCard from \"./components/ResultsCard\";\nimport SearchCard from \"./components/SearchCard\";\nimport { firebaseConfig } from \"./config/firebase\";\n\nfunction App() {\n  const [results, setResults] = useState([]);\n\n  const onSearchHandler = (results) => {\n    setResults(results);\n  };\n  return (\n    <FirestoreProvider {...firebaseConfig} firebase={firebase}>\n      <div className=\"App\">\n        <Container>\n          <SearchCard onSearch={onSearchHandler}></SearchCard>\n          <ResultsCard results={results}></ResultsCard>\n        </Container>\n      </div>\n    </FirestoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}